// 게시판 관련 데이터 저장

package com.future.blue.board.vo;

import java.sql.Timestamp;
import java.util.Arrays;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

    public class BoardVO {
    	@NotBlank(message = "제목을 입력하세요.")
        @Size(max = 100, message = "제목은 100자를 넘을 수 없습니다.")
        private String boardTitle;	   // 제목

        @NotBlank(message = "내용을 입력하세요.")
        private String boardContents;  // 내용

        private int boardId;           // 게시판 ID (넘버)
        private String boardCategory;  // 게시판 카테고리
        private String boardWriter;    // 글쓴이
        private String boardPass;      // 비밀번호
        private Timestamp createDt;    // 생성일
        private Timestamp updateDt;    // 수정일
        private String memId;          // 회원 ID
        private int boardHit;          // 조회수
        private int boardLike;         // 좋아요수
        private String useYn;          // 사용여부
        private String filePath; 	   // 파일 경로 저장

        
        /** Getters / Setters 메소드
         *  메소드를 통해 데이터 접근 유도.
         *  오브젝트 내의 함수들을 괄호없이 쓸 수 있게 만들어 줌.
         *  결론: 데이터의 무결성 보존을 위해 사용.
         *  get: 데이터 가져옴 / set: 데이터 입력, 수정
         *  ** 규칙 **
         *  get: 파라미터 x, 함수 내에 return
         *  set: 파라미터 존재
         * **/
        public int getBoardId() {              // getter
            return boardId;
        }

        public void setBoardId(int boardId) {  // setter
            this.boardId = boardId;
        }

        public void setBoardCategory(String boardCategory) {
            this.boardCategory = boardCategory;
        }
        
        // boardCategory 값이 유효한지 확인. ex)허용된 카테고리만 저장
        // 카테고리 유효성 검사
        public boolean isValidCategory() {
            String[] validCategories = {"free", "crop", "diary"};
            return Arrays.asList(validCategories).contains(boardCategory);
        }
        
        // 게시글 목록에서 간단한 내용 요약을 보여줌
        public String getSummary(int length) {
            if (boardContents == null || boardContents.length() <= length) {
                return boardContents; // 내용이 짧으면 그대로 반환
            }
            return boardContents.substring(0, length) + "..."; // 지정 길이만큼 잘라 반환
        }

        // 글쓴이
        public String getBoardWriter() {
            return boardWriter;
        }

        public void setBoardWriter(String boardWriter) {
            this.boardWriter = boardWriter;
        }
        
        // 회원 ID
        public String getMemId() {
            return memId;
        }

        public void setMemId(String memId) {
            this.memId = memId;
        }
        
        // 제목
        public String getBoardTitle() {
            return boardTitle;
        }

        public void setBoardTitle(String boardTitle) {
            this.boardTitle = boardTitle;
        }
        
        // 내용        
        public String getBoardContents() {
            return boardContents;
        }

        public void setBoardContents(String boardContents) {
            this.boardContents = boardContents;
        }

        // 비밀번호
        public String getBoardPass() {
            return boardPass;
        }

        public void setBoardPass(String boardPass) {
            this.boardPass = boardPass;
        }

        // 생성일, 수정일
        public Timestamp getCreateDt() {
            return createDt;
        }

        public void setCreateDt(Timestamp createDt) {
            this.createDt = createDt;
        }

        public Timestamp getUpdateDt() {
            return updateDt;
        }

        public void setUpdateDt(Timestamp updateDt) {
            this.updateDt = updateDt;
        }
        
        // 파일 경로 저장
        public String getFilePath() {
            return filePath;
        }

        public void setFilePath(String filePath) {
            this.filePath = filePath;
        }
        
        //  파일 이름 추출
        public String getImageFileName() {
            if (this.filePath != null && !this.filePath.isEmpty()) {
                // 파일 경로에서 파일명만 추출
                String[] parts = this.filePath.split("/");
                return parts[parts.length - 1];
            }
            return null;  // 파일 경로가 없으면 null 반환
        }
        
        // 조회수
        public int getBoardHit() {
            return boardHit;
        }

        public void setBoardHit(int boardHit) {
            this.boardHit = boardHit;
        }
        
        // 좋아요
        public int getBoardLike() {
            return boardLike;
        }

        public void setBoardLike(int boardLike) {
            this.boardLike = boardLike;
        }
        
        // 사용여부 
        public String getUseYn() {
            return useYn;
        }

        public void setUseYn(String useYn) {
            this.useYn = useYn;
        }
        		
    }
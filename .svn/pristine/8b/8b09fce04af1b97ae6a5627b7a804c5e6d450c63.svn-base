<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ page session="false"%>
<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>채팅 화면</title>
<style>
/* 공통 스타일 */
* {
	padding: 0;
	box-sizing: border-box;
}

body {
	font-family: Arial, sans-serif;
	background-color: #f9f9f9;
	height: 100vh;
	display: flex;
	flex-direction: column;
	margin: 0 10%;
	border-radius: 5%;
}

/* 상태 바 */
.status-bar {
	background-color: #4CAF50;
	color: white;
	padding: 10px 20px;
	display: 10px;
	justify-content: space-between;
	align-items: center;
	font-weight: bold;
	font-size: 1rem;
}

/* 물품 정보 */
.item-info {
	display: flex;
	align-items: center;
	background-color: white;
	padding: 15px;
	border-bottom: 1px solid #ddd;
}

.item-info img {
	width: 100px;
	height: 100px;
	border-radius: 10px;
	margin-right: 15px;
	object-fit: cover;
}

.item-details {
	flex: 1;
}

.item-details div {
	margin: 5px 0;
	font-size: 14px;
}

.item-details .title {
	font-size: 1.1rem;
	font-weight: bold;
}

/* 거래 진행도 */
.progress {
	display: flex;
	justify-content: space-around;
	margin-bottom: 5px;
	padding: 15px;
	line-height: 0;
	background-color: #f4f4f4;
	border-bottom: 1px solid #ddd;
}

.progress button {
	flex: 1;
	text-align: center;
	font-size: 12px;
	font-weight: bold;
	color: #888;
	cursor: pointer;
	background: none;
	border: none;
	transition: all 0.3s ease;
}

.progress button:hover {
	color: #4CAF50;
}

.progress button.active {
	color: #4CAF50;
	border: 1px solid #4CAF50;
	border-radius: 5px;
	background-color: #e8f5e9;
}

/* 채팅 영역 */
.chat-container {
	flex: 1;
	overflow-y: auto;
	padding: 10px;
	background-color: #fff;
}

.message {
	display: flex;
	margin-bottom: 15px;
	font-size: 14px;
	align-items: center;
}

.message img {
	width: 40px;
	height: 40px;
	border-radius: 50%;
	margin-right: 10px;
	object-fit: cover;
}

.message.right {
	justify-content: flex-end;
}

.message .content {
	max-width: 60%;
	padding: 10px;
	border-radius: 10px;
	background-color: #f1f1f1;
	position: relative;
}

.message.right .content {
	background-color: #4CAF50;
	color: white;
}

.message .time {
	font-size: 10px;
	color: #888;
	margin-left: 5px;
}

/* 입력창 */
.input-container {
	display: flex;
	align-items: center;
	padding: 10px;
	background-color: #f4f4f4;
	border-top: 1px solid #ddd;
}

.input-container button {
	background: none;
	border: none;
	margin-left: 10px;
	cursor: pointer;
}

.input-container button img {
	width: 25px;
	height: 25px;
}

.input-container input {
	flex: 1;
	padding: 10px;
	margin: 10px;
	border-radius: 20px;
	border: 1px solid #ddd;
	outline: none;
	font-size: 14px;
}

.me {
	text-align: right;
	/* text-align:center; */
}

/* 반응형 */
@media ( max-width : 768px) {
	.progress button {
		font-size: 10px;
		padding: 8px;
	}
	body {
		font-family: Arial, sans-serif;
		background-color: #f9f9f9;
		height: 100vh;
		display: flex;
		flex-direction: column;
		margin: 0;
	}
	.item-info img {
		width: 80px;
		height: 80px;
	}
	.message .content {
		max-width: 80%;
	}
	.progress div {
		font-size: 10px;
	}
	/* 모달 스타일 */
	.image-modal {
		display: none;
		position: fixed;
		z-index: 1000;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.8);
		justify-content: center;
		align-items: center;
	}
	.image-modal .modal-content {
		max-width: 70%;
		max-height: 70%;
		border: 3px solid white;
		border-radius: 10px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
		object-fit: contain;
		cursor: pointer;
	}
	.image-modal .close {
		position: absolute;
		top: 20px;
		right: 35px;
		color: #fff;
		font-size: 40px;
		font-weight: bold;
		cursor: pointer;
	}
	.image-modal .close:hover, .image-modal .close:focus {
		color: #bbb;
		text-decoration: none;
		cursor: pointer;
	}
	.header-container {
		display: flex;
		align-items: center;
		justify-content: space-between; /* 요소들을 좌우로 배치 */
		width: 100%;
	}
	.back-button {
		margin-right: 10px; /* 뒤로가기 버튼과 아이디 사이에 간격을 추가 */
	}
	.chat-seller {
		margin-left: 5px; /* 아이디를 왼쪽에 고정 */
	}
	.trust-level {
		margin-left: 10px; /* 신뢰도와 아이디 사이에 간격을 추가 */
	}

}
</style>
</head>
<jsp:include page="/WEB-INF/inc/common/header.jsp"></jsp:include>
<body id="page-top">
	<c:set var="memId" value="${userInfo.memId}" />
	<section class="page-section" id="contact">
		<div class="container" style="margin-top: 30px;">
			<div id="chat-containerK">
				<div class="chatWrap">
					<!-- 방 정보 -->
					<div class="main_tit"></div>
					<div class="content chatcontent" id="chat-content">
						<div id="list-guestbook"></div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- 상태 바 -->
	<div class="status-bar">
		<button class="back-button" onclick="goBack()">←</button>
		<span class="chat-seller" >아이디: ${roomView.chatSeller}</span> 
		<span class="trust-level">신뢰도: 90%</span>
	</div>

	<!-- 물품 정보 -->
	<div class="item-info">
		<div class="item-details">
			<div class="title">${roomView.prodName}</div>
			<div>${roomView.prodPrice}원</div>
			<div>${roomView.prodPlace}</div>
		</div>
	</div>



	<!-- 거래 진행도 -->
	<div class="progress" id="progress">
		<button id="appointmentForm" class="progress-step" data-step="0"
			onclick="updateProgress(0)">약속잡기</button>
		<button class="progress-step" data-step="1"
			onclick="updateProgress(1)">거래완료</button>
		<button class="progress-step" data-step="2"
			onclick="updateProgress(2)">후기 보내기</button>
	</div>

	<!-- 채팅 영역 -->
	<div class="chat-container">
		<div class="content chatcontent" data-room-no="">
			<c:forEach var="chat" items="${chatList}">

				<!-- 내 채팅일 경우 -->
				<!-- 수정해야함 -->
				<c:if test="${memId eq chat.tmSender }">
					<ul>
						<li data-no="" class="me pr-2"><strong class="">${chat.tmSender }</strong>
							<img src="${chat.tmImgPath }"
							class="rounded-circle img-thumbnail shadow-sm" width="50">
							<div class="me">
								<c:if test="${chat.tmContentType eq 'TEXT' }">
									<p class='myChat chat-box text-left p-3'>${chat.tmContent }</p>
								</c:if>
								<c:if test="${chat.tmContentType eq 'IMG' }">
									<img src="${chat.tmContent }" width="100">
								</c:if>
								<br> <strong style="display: inline;"
									class="align-self-end">${chat.tmDate }</strong>
							</div></li>
					</ul>
				</c:if>
				<!-- 다른사람의 채팅일 경우 -->
				<!-- 수정해야함 -->
				<c:if test="${memId ne chat.tmSender }">
					<ul>
						<li data-no="" class="pl-2"><strong>${chat.tmSender }</strong>
							<img src="${chat.tmImgPath }"
							class="rounded-circle img-thumbnail shadow-sm" width="50">
							<div>
								<c:if test="${chat.tmContentType eq 'TEXT' }">
									<p class='chat-box bg-light p-3'>${chat.tmContent }</p>
								</c:if>
								<c:if test="${chat.tmContentType eq 'IMG' }">
									<img src="${chat.tmContent }" width="100">
								</c:if>
								<br> <strong style="display: inline;"
									class="align-self-center">${chat.tmDate }</strong>
							</div></li>
					</ul>
				</c:if>
			</c:forEach>
		</div>
	</div>
	<div id="imageModal" class="image-modal" style="display: none;">
		<span class="close" onclick="closeModal()">&times;</span> <img
			class="modal-content" id="modalImage">
	</div>

	<!-- 입력창 -->
	<div class="input-container">
		<button id="addImageButton" aria-label="사진 추가">
			<img src="https://cdn-icons-png.flaticon.com/512/1828/1828817.png"
				alt="추가 버튼">
		</button>
		<input type="file" id="fileInput" accept="image/*"
			style="display: none;"> <input type="text" id="msgi"
			placeholder="메시지를 입력해주세요">
		<button>
			<img src="https://cdn-icons-png.flaticon.com/512/742/742751.png"
				alt="이모지">
		</button>
		<button id="btnSend">
			<img src="https://cdn-icons-png.flaticon.com/512/786/786205.png"
				alt="전송">
		</button>
	</div>
	<!-- 약속잡기 입력 폼 -->
	<div id="appointmentForm" style="display: none;">
		<label for="meetTime">시간:</label> <input type="datetime-local"
			id="meetTime" name="meetTime"> <label for="meetPlace">장소:</label>
		<input type="text" id="meetPlace" name="meetPlace" placeholder="장소 입력">

		<label for="meetPrice">가격:</label> <input type="number" id="meetPrice"
			name="meetPrice" placeholder="가격 입력">

		<button id="sendAppointment">약속 보내기</button>
	</div>


	<!-- jQuery CDN 추가 -->
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<!-- SockJS와 STOMP CDN 추가 -->
	<script
		src="https://cdn.jsdelivr.net/npm/sockjs-client/dist/sockjs.min.js"></script>
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
	<script>
		var tmChatId = '${chatId}'; // 채팅방 ID      
		var memId = '${memId}'; // 사용자 ID
		var memNm = '테스트 사용자'; // 사용자 이름
		$(document)
				.ready(
						function() {
							var client;

							// WebSocket 연결 설정
							var sock = new SockJS("/endpoint");
							client = Stomp.over(sock);

							// 서버 연결
							client.connect({
								"userId" : memId,
								"tmChatId" : tmChatId
							}, function() {
								console.log("WebSocket 연결 성공");

								// 채팅 구독
								client.subscribe("/subscribe/chat/${chatId}",
										function(chat) {
											var body = JSON.parse(chat.body);
											console.log(body);
											// 메시지 렌더링
											var messageHtml = renderList(body);
											$(".chat-container").append(
													messageHtml);
											scrollDown();
										});
							}, function(error) {
								console.error("WebSocket 연결 실패:", error);
								alert("채팅 서버와 연결할 수 없습니다.");
							});

							// 메시지 전송
							$("#btnSend").click(sendMessage);
							$("#msgi").keydown(function(e) {
								if (e.keyCode === 13)
									sendMessage();
							});

							// 메시지 전송 함수
							function sendMessage() {
								var msg = $("#msgi").val().trim();
								if (msg === "")
									return;

								client.send(`/app/hello/${chatId}`, {}, JSON
										.stringify({
											tmContent : msg,
											tmSender : memId,
											tmContentType : "TEXT",
											tmChatId : tmChatId,
											memNm : memNm
										}));
								$("#msgi").val('');
							}
							// 이미지 전송 함수
							$(document)
									.ready(
											function() {
												// 파일 선택 버튼 클릭 시 fileInput 클릭 트리거
												$("#addImageButton").click(
														function() {
															$("#fileInput")
																	.click();
														});

												// 파일 선택 후 이벤트 처리
												$("#fileInput")
														.change(
																function(event) {
																	const file = event.target.files[0];
																	if (file) {
																		console
																				.log(
																						'사진이 선택되었습니다:',
																						file.name);
																		// 파일 처리 로직 추가
																		let fileType = file['type'];
																		let valTypes = [
																				'image/gif',
																				'image/jpeg',
																				'image/jpg',
																				'image/png' ];
																		if (!valTypes
																				.includes(fileType)) {
																			alert("유효한 이미지 타입이 아닙니다.!!");
																			$(
																					this)
																					.val(
																							''); //선택파일 초기화
																		} else {
																			// 수정해야함. 
																			var formData = new FormData();
																			formData
																					.append(
																							'file',
																							file);
																			formData
																					.append(
																							'tmSender',
																							'do');
																			formData
																					.append(
																							'tmChatId',
																							tmChatId);
																			console
																					.log(formData);
																			$
																					.ajax({
																						url : '<c:url value="/files/upload" />',
																						type : 'POST',
																						data : formData,
																						dataType : 'json',
																						processData : false //formData객체를 URL인코딩하지 않도록
																						,
																						contentType : false //디폴트 전송인 application/x-www-form-urlencoded 로 전송하지 않도록
																						// 파일은 multipart/form-data 이진 데이터 형태로 전송
																						,
																						success : function(
																								res) {
																							client
																									.send(
																											`/app/hello/${chatId}`,
																											{},
																											JSON
																													.stringify({
																														tmContent : res.imagePath,
																														tmContentType : 'IMG',
																														tmSender : memId,
																														tmChatId : tmChatId,
																														memNm : memNm
																													}));
																							console
																									.log(res);
																						},
																						error : function(
																								e) {
																							console
																									.log(e)
																						}
																					});
																		}
																	}
																});
											});

							// 메시지 출력
							function renderList(vo) {
								console.log(vo);
								var str = "";
								var content = "";

								// 내가 보낸 메시지 (memId가 일치하는 경우)
								if (vo.tmSender === memId) {
									if (vo.tmContentType == 'IMG') {
										content = '<img src="'+vo.tmContent +'" width="100" >'
									} else {
										content = "<p class='myChat chat-box text-left p-3'>"
												+ vo.tmContent + "</p>";
									}
									str = "<li data-no='' class='me pr-2'>"
											+ "<strong class=''>"
											+ vo.tmSender
											+ "</strong>"
											+ "<div class='me'>"
											+ content
											+ "</div>"
											+ "<strong style='display: inline;' class='align-self-end'>"
											+ vo.tmDate + "</strong>" + "</li>";
								} else {
									if (vo.tmContentType == 'IMG') {
										content = '<img src="'+vo.tmContent +'" width="100" >'
									} else {
										content = "<p class='chat-box bg-light p-3'>"
												+ vo.tmContent + "</p>";
									}
									// 다른 사람이 보낸 메시지
									str = "<li data-no='' class='pr-2'>"
											+ "<strong class=''>"
											+ vo.tmSender
											+ "</strong>"
											+ "<div>"
											+ content
											+ "</div>"
											+ "<strong style='display: inline;' class='align-self-end'>"
											+ vo.tmDate + "</strong>" + "</li>";
								}

								return str;
							}

							// 채팅창 스크롤 하단 이동
							function scrollDown() {
								$(".chat-container").scrollTop(
										$(".chat-container")[0].scrollHeight);
							}

							// 거래 진행도 업데이트
							window.updateProgress = function(index) {
								$(".progress div").each(function(i) {
									$(this).toggleClass("active", i <= index);
								});
							};
						});
		// 이미지 클릭 이벤트 등록
		$(document).on("click", ".chat-container img", function() {
			var imgSrc = $(this).attr("src");
			openModal(imgSrc);
		});

		// 모달 열기
		function openModal(imageSrc) {
			$("#modalImage").attr("src", imageSrc);
			$("#imageModal").fadeIn();
		}

		// 모달 닫기 (모달을 클릭하면 닫힘)
		$(document).on("click", "#imageModal", function() {
			closeModal();
		});

		// 모달 닫기 함수
		function closeModal() {
			$("#imageModal").fadeOut();
		}
		// 약속잡기 버튼 클릭 시 폼 표시
		window.updateProgress = function(index) {
			$(".progress div").each(function(i) {
				$(this).toggleClass("active", i <= index);
			});

			if (index === 0) {
				// 약속잡기 클릭 시 폼을 표시
				$("#appointmentForm").toggle();
			}
		};

		// 약속 전송 처리
		$("#sendAppointment")
				.click(
						function() {
							var meetTime = $("#meetTime").val();
							var meetPlace = $("#meetPlace").val();
							var meetPrice = $("#meetPrice").val();

							if (!meetTime || !meetPlace || !meetPrice) {
								alert("모든 정보를 입력해주세요.");
								return;
							}

							var appointmentMessage = `약속: ${meetTime}에 ${meetPlace}에서 거래, 가격: ${meetPrice}원`;

							// 약속 정보를 채팅으로 전송
							client.send(`/app/hello/${tmChatId}`, {}, JSON
									.stringify({
										tmContent : appointmentMessage,
										tmSender : memId,
										tmContentType : "TEXT",
										tmChatId : tmChatId,
										memNm : memNm
									}));

							// 폼 초기화 및 숨기기
							$("#appointmentForm").hide();
							$("#meetTime").val('');
							$("#meetPlace").val('');
							$("#meetPrice").val('');
						});
		// 메시지 출력
		function renderList(vo) {
			var str = "";
			var content = "";

			// 약속 메시지인지 체크
			if (vo.tmContent.startsWith('약속:')) {
				content = "<p class='appointment-message'>" + vo.tmContent
						+ "</p>";
			} else if (vo.tmContentType === 'IMG') {
				content = '<img src="' + vo.tmContent + '" width="100" >';
			} else {
				content = "<p class='chat-box'>" + vo.tmContent + "</p>";
			}

			// 메시지 생성
			if (vo.tmSender === memId) {
				str = "<li class='me'>" + "<strong>" + vo.tmSender
						+ "</strong>" + "<div class='me'>" + content + "</div>"
						+ "<strong>" + vo.tmDate + "</strong></li>";
			} else {
				str = "<li class='other'>" + "<strong>" + vo.tmSender
						+ "</strong>" + "<div>" + content + "</div>"
						+ "<strong>" + vo.tmDate + "</strong></li>";
			}

			return str;
		}
	</script>
</body>

</html>

package com.future.blue.diary.web;

import com.future.blue.diary.service.DiaryService;
import com.future.blue.diary.vo.DiaryVO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/diary")
public class DiaryController {

	@Autowired
	private DiaryService diaryService;

	// 다이어리 생성 화면
	@GetMapping("/create")
	public String createDiary() {
		return "board/diary/create"; // /WEB-INF/views/board/diary/create.jsp
	}

	// 다이어리 수정 화면
	@GetMapping("/edit/{diaryId}")
	public String editDiary(@PathVariable int diaryId, Model model) {
		// 다이어리 조회 후 수정 화면으로 전달
		DiaryVO diary = diaryService.getDiaryById(diaryId);
		model.addAttribute("diary", diary); // 다이어리 수정 화면으로 전달
		return "board/diary/edit"; // /WEB-INF/views/board/diary/edit.jsp
	}

	// 다이어리 상세 화면
	@GetMapping("/detail/{diaryId}")
	public String viewDiary(@PathVariable int diaryId, Model model) {
		// 다이어리 조회 화면으로 전달
		DiaryVO diary = diaryService.getDiaryById(diaryId);
		model.addAttribute("diary", diary); // 다이어리 상세 정보 화면으로 전달
		return "board/diary/detail"; // /WEB-INF/views/board/diary/detail.jsp
	}

	// 다이어리 목록 화면 (페이지네이션, 정렬, 검색 처리)
	@GetMapping("/list")
	public String listDiaries(Model model, @RequestParam Map<String, Object> params) {
	    // 기본값 처리
	    if (params.get("sortBy") == null) {
	        params.put("sortBy", "new"); // 기본값 'new' 설정
	    }

	    // 페이지네이션 관련 기본값 처리
	    int currentPage = Integer.parseInt((String) params.getOrDefault("currentPage", "1"));
	    int pageSize = 8; // 한 페이지에 8개 항목

	    // 페이지네이션 계산
	    int offset = (currentPage - 1) * pageSize;

	    // 페이지네이션, 검색, 정렬을 포함한 다이어리 목록 조회
	    params.put("offset", offset);
	    params.put("pageSize", pageSize);
	    Map<String, Object> diaryListData = diaryService.getDiaryList(params);

	    // 총 페이지 계산
	    int totalCount = (int) diaryListData.get("totalCount");
	    int totalPages = (int) Math.ceil((double) totalCount / pageSize);

	    // 모델에 다이어리 목록과 총 개수 등을 전달
	    model.addAttribute("diaryList", diaryListData.get("list"));
	    model.addAttribute("totalCount", totalCount);
	    model.addAttribute("currentPage", currentPage);
	    model.addAttribute("totalPages", totalPages); // 전체 페이지 수를 모델에 전달

	    return "board/diary/list"; // /WEB-INF/views/board/diary/list.jsp
	}

}

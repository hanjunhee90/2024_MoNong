<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>시세 확인</title>
	<!-- Chart.js 라이브러리 -->
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	
    <style>
        /* 기본 스타일 */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            color: #333;
        }

        .result-container {
            width: 90%;
            max-width: 1000px;
            margin: 20px auto;
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 22px;
            color: #4CAF50;
            margin-bottom: 20px;
            text-align: center;
        }

        /* 입력 필드 및 버튼 */
        .input-row {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .input-row div {
            flex: 1;
            margin: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .input-row input, .input-row button {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        button {
            background-color: #3366FF;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #2558c2;
        }

        /* 그래프 선택 버튼 */
        .graph-buttons {
            display: flex;
            margin: 10px 0;
            gap: 10px;
        }

        .graph-buttons button {
            flex: 1;
            padding: 15px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
        }

        .graph-buttons .current {
            background-color: #4CAF50; /* 테마 초록색 */
        }

        .graph-buttons .current:hover {
            background-color: #45a049;
        }

        .graph-buttons .prediction {
            background-color: #FF9800; /* 테마 주황색 */
        }

        .graph-buttons .prediction:hover {
            background-color: #FB8C00;
        }

        .result-section {
		    display: flex;
		    justify-content: space-between;
		    flex-wrap: wrap;
		    margin-top: 20px;
		}
		
		.result-box {
		    flex: 1; /* 동일한 너비를 가짐 */
		    margin: 10px;
		    text-align: center;
		    border: 1px solid #ddd;
		    border-radius: 10px;
		    padding: 15px;
		    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
		    box-sizing: border-box; /* padding, border가 크기에 포함되도록 */
		}
		
		.result-box img {
		    width: 100%;  /* 이미지가 박스를 넘지 않도록 */
		    height: auto; /* 이미지의 비율을 유지 */
		    max-height: 150px; /* 이미지 크기 제한 */
		}
		
		/* 차트 스타일 */
		.result-box.chart {
		    display: flex;
		    justify-content: center;
		    align-items: center;
		    height: 300px; /* 차트 높이 설정 */
		}
		
		canvas {
		    width: 100% !important;
		    height: 100% !important;
		}
	}
    </style>
</head>
<body>

<jsp:include page="/WEB-INF/inc/common/header.jsp"></jsp:include>

	<div class="container">
	    <!-- 제목 -->
	    <h1>시세 확인</h1>
	
	    <!-- 입력 필드 -->
	    <div class="input-row">
	        <div class="col">
<%-- 	        <%= new java.text.SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date()) %> --%>
	        	<input class="form-control" name="prceRegYmd" type="date" id="dateInput" value="${marketList[0].prceRegYmd}" />
	    	</div>
	        <div class="col">
		        <select id="pdltCtgSelect" class="form-select" style="height: 44.22222px;">
		        	<option value="">-- 부류 선택 --</option>
		        <c:forEach var="code" items="${marketList}">       
		        	 <option value="${code.pdltCtgCode}">${code.pdltCtgNm}</option>
		        </c:forEach>
			    </select>
			</div>
			<div class="col">
				<select id="pdltNmSelect" class="form-select"  style="height: 44.22222px;">
					<option value="">-- 품목 선택 --</option>
			    </select>
	        </div>
	         <div class="col">
	         	<button id="button">검색하기</button>
	         </div>
	         <div class="col">
	    		<button id="resetButton" style="background-color: #999;">선택 초기화</button>
			</div>
	    </div>
	
	    <!-- 그래프 선택 버튼 -->
	    <div class="graph-buttons">
	        <button class="current">최근 가격</button>
	        <form action="/getPrediction" method="post">
	        	<button type="submit">예측 가격</button>
	        </form>
	    </div>
	
	    <!-- 결과 섹션 -->
	    <div class="result-section">
	        <div class="result-box">
	            <p><strong>품목:</strong></p>
	            <p><strong>단위:</strong></p>
	            <img id="productImage" src="pdltPath" alt="제품 이미지">
	        </div>
	    </div>
	    <div class="result-section">
	    	<div class="result-box chart">
	            <canvas id="priceChart"></canvas>
	        </div>
	    </div>
	    <div class="result-section">
	    	<div class="result-box chart">
	    		<canvas id="predictChart"></canvas>
	    	</div>
	    </div>
	</div>
	

<jsp:include page="/WEB-INF/inc/common/footer.jsp"></jsp:include>

</body>

<script>
$(document).ready(function(){
    // 페이지 로드 시 기본 이미지 설정
    $('#productImage').attr('src', '/images/default_image.jpg');
    
    // 부류 선택 시 해당하는 품목을 가져오기
    $("#pdltCtgSelect").on('change', function(){
        var ctgNm = $(this).val();
        var prceRegYmd = $("#dateInput").val().replaceAll("-","");
        $.ajax({
            url: "/market/main_kmh2",
            type: "POST",
            data: {"pdltCtgCode" : ctgNm, "prceRegYmd": prceRegYmd},
            dataType: 'json',
            success: function(res){
                console.log(res);
                $("#pdltNmSelect").empty().append('<option value="">-- 품목 선택 --</option>');
                $.each(res, function(idx, item){
                    $("#pdltNmSelect").append('<option value="' + item.pdltCode + '">' + item.pdltNm + '</option>');
                });
                
                // 품목이 선택되었을 때, 선택된 품목 이름을 동적으로 표시
                $("#pdltNmSelect").on('change', function() {
                    var selectedItemName = $(this).find("option:selected").text();
                    if (selectedItemName) {
                        $('#itemName').html('<strong>품목:</strong> ' + selectedItemName);
                    } else {
                        $('#itemName').html('<strong>품목:</strong> 선택해주세요');
                    }
                });
                
            },
            error: function(e){
                console.log(e);
            }
        });
    });

    // 초기화 버튼 클릭 시
    $("#resetButton").on('click', function() {
        // 날짜 초기화
        $("#dateInput").val(new Date().toISOString().split("T")[0]); // 오늘 날짜로 설정

        // 부류 선택 초기화
        $("#pdltCtgSelect").val("");

        // 품목 선택 초기화
        $("#pdltNmSelect").empty().append('<option value="">-- 품목 선택 --</option>');
    });

    // 검색 버튼 클릭 시
    $("button").on('click', function(){
        var prceRegYmd = $("#dateInput").val();
        var pdltCtgCode = $("#pdltCtgSelect").val();
        var pdltCode = $("#pdltNmSelect").val();

        // 부류가 선택되지 않았을 경우
        if (!pdltCtgCode) {
            alert("부류를 선택해주세요.");
            return;
        }

        // 품목이 선택되지 않았을 경우
        if (!pdltCode) {
            alert("품목을 선택해주세요.");
            return;
        }

        console.log(prceRegYmd, pdltCtgCode, pdltCode);

        $.ajax({
            url: "/market/searchProduct",
            type: "POST",
            data: {"prceRegYmd": prceRegYmd, "pdltCtgCode": pdltCtgCode, "pdltCode": pdltCode},
            dataType: 'json',
            success: function(res) {
                console.log(res);
                console.log("Server response:", res);

                // 품목 업데이트
                if (res && res.length > 0) {
                    const itemName = res[0].pdltNm || "정보 없음";
                    $('p:contains("품목:")').html('<strong>품목:</strong> ' + itemName);

                    // 이미지 URL 업데이트
                    const imageUrl = res[0].pdltPath;
                    $('#productImage').attr('src', '/' + imageUrl);

                    // 단위 업데이트
                    const weight = res[0].dsbnStepActoWt || "정보 없음";
                    const unitName = res[0].dsbnStepActoUnitNm || "정보 없음";
                    
                    $('p:contains("단위:")').html('<strong>단위:</strong> ' + weight + unitName);

                    // 예측 가격 업데이트
                    const predictedPrice = res[0].predictedPrice || "정보 없음";
                    $('p:contains("예측 가격:")').html('<strong>예측 가격:</strong> ' + predictedPrice + ' 원');
                }

                // 차트 그리기
                if (res && res.length > 0) {
                    var labels = res.map(item => formatDate(item.prceRegYmd));  // 날짜 포맷 변경
                    var data = res.map(item => parseFloat(item.avrgPrce));

                    // 데이터를 역순으로 정렬
                    labels.reverse();
                    data.reverse();

                    // 차트 생성
                    var ctx = document.getElementById('priceChart').getContext('2d');

                    // 이전에 생성된 차트가 있다면 파괴
                    if (window.myChart) {
                        window.myChart.destroy();
                    }

                    window.myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: '도매 평균가',
                                data: data,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderWidth: 2,
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                tooltip: {
                                    enabled: true,
                                    intersect: false,
                                    callbacks: {
                                        label: function(tooltipItem) {
                                            return Math.round(tooltipItem.raw).toLocaleString() + ' 원';
                                        }
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    title: {
                                        display: true
                                    }
                                },
                                y: {
                                    title: {
                                        display: true
                                    },
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                    // 예측 가격 차트 그리기
                    var ctxPredict = document.getElementById('predictChart').getContext('2d');
                    if (window.myPredictChart) {
                        window.myPredictChart.destroy();
                    }

                    // 날짜를 고정된 날짜로 설정
                    var fixedLabels = ['11/11', '11/12', '11/13', '11/14', '11/15'];

                    // 두 번째 그래프의 마지막 가격을 기준으로 예측 가격을 0.5%씩 증가시키기
                    var lastPrice = data[data.length - 1];  // 두 번째 그래프의 마지막 가격

                    var increasedPrices = [lastPrice];  // 첫 번째 값은 마지막 가격으로 설정

                    for (var i = 1; i < fixedLabels.length; i++) {
                        var increasedPrice = increasedPrices[i - 1] * 1.01;  // 1.0% 증가
                        increasedPrices.push(increasedPrice);
                    }

                    // 증가한 가격 데이터로 차트 그리기
                    window.myPredictChart = new Chart(ctxPredict, {
                        type: 'line',
                        data: {
                            labels: fixedLabels, // 고정된 날짜로 설정
                            datasets: [{
                                label: '예측 가격',
                                data: increasedPrices,  // 0.5% 증가된 가격 데이터
                                borderColor: 'rgba(255, 159, 64, 1)', // 예측 차트 색상
                                backgroundColor: 'rgba(255, 159, 64, 0.2)', // 예측 차트 배경 색상
                                borderWidth: 2,
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                tooltip: {
                                    enabled: true,
                                    intersect: false,
                                    callbacks: {
                                        label: function(tooltipItem) {
                                            return Math.round(tooltipItem.raw).toLocaleString() + ' 원';
                                        }
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    title: {
                                        display: true
                                    }
                                },
                                y: {
                                    title: {
                                        display: true
                                    },
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                } else {
                    alert("해당 데이터가 없습니다.");
                }
            },
            error: function(e) {
                console.log(e);
            }
        });
    });

    // 날짜 포맷팅 함수
    function formatDate(dateString) {
        const formattedDate = dateString.substring(0, 4) + '-' + dateString.substring(4, 6) + '-' + dateString.substring(6, 8);
        const date = new Date(formattedDate);
        const options = { month: '2-digit', day: '2-digit' };
        return date.toLocaleDateString('en-US', options);
    }
});
</script>


</html>